{"ast":null,"code":"import _regeneratorRuntime from \"/Users/juanzapien/Documents/api-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/juanzapien/Documents/api-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/juanzapien/Documents/api-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/juanzapien/Documents/api-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/juanzapien/Documents/api-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/juanzapien/Documents/api-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/juanzapien/Documents/api-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/juanzapien/Documents/api-project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Titles from './components/Titles';\nimport Forms from './components/Forms';\nimport Weather from './components/Weather';\nimport Footer from './components/Footer';\nimport axios from 'axios';\nvar ApiWeatherKey = process.env.REACT_APP_WEATHER_API_KEY;\nvar ApiYelpKey = process.env.REACT_APP_YELP_API_KEY;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      park: undefined,\n      img: undefined,\n      error: undefined,\n      check: false\n    };\n\n    _this.getYata = function (place) {\n      axios.get('https://cors-anywhere.herokuapp.com/'.concat(\"https://api.yelp.com/v3/businesses/search?location=\", place), {\n        headers: {\n          Authorization: \"Bearer \".concat(ApiYelpKey)\n        },\n        params: {\n          categories: 'active',\n          title: \"Parks\",\n          alias: \"parks\",\n          term: \"park\"\n        }\n      }).then(function (res) {\n        console.log(res);\n        var values = [];\n        var images = [];\n\n        for (var i = 0; i < 4; i++) {\n          values.push(res.data.businesses[i].name);\n          images.push(res.data.businesses[i].image_url);\n        }\n\n        _this.setState({\n          temp: _this.state.temp,\n          city: _this.state.city,\n          country: _this.state.country,\n          humidity: _this.state.humidity,\n          description: _this.state.description,\n          park: values,\n          img: images,\n          error: _this.state.error,\n          check: true\n        });\n      }).catch(function (err) {\n        console.log('error');\n        return 'error';\n      });\n    };\n\n    _this.getData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, country, ApiCall, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault(); //let city = e.target.elements.city.value;\n\n                city = e.target.elements.city.value.toLowerCase().split(' ').join('+');\n                country = e.target.elements.country.value; //const cityUnderscore = city.split(' ').join('+');\n\n                console.log(city);\n                _context.next = 6;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&units=imperial&appid=\").concat(ApiWeatherKey));\n\n              case 6:\n                ApiCall = _context.sent;\n                _context.next = 9;\n                return ApiCall.json();\n\n              case 9:\n                data = _context.sent;\n                console.log(data);\n\n                if (city && country && data.cod !== '404') {\n                  _this.setState({\n                    temp: data.main.temp,\n                    city: data.name,\n                    country: data.sys.country,\n                    humidity: data.main.humidity,\n                    description: data.weather[0].description,\n                    park: 'Loading',\n                    img: 'Loading',\n                    error: \"\",\n                    check: false\n                  });\n                } else {\n                  _this.setState({\n                    temp: undefined,\n                    city: undefined,\n                    country: undefined,\n                    humidity: undefined,\n                    description: undefined,\n                    park: undefined,\n                    img: 'Loading',\n                    error: data.message,\n                    check: false\n                  });\n                }\n\n                _this.getYata(city);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var sites = [];\n\n      if (this.state.check) {\n        for (var i = 0; i < this.state.park.length; i++) {\n          sites.push(React.createElement(\"div\", {\n            className: \"row parks\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col-6 col-md park-left\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: this.state.img[i],\n            alt: \"Img\",\n            className: \"cardImg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"col-6 col-md park-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            className: \"park--title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, this.state.park[i])))));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row headers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6 col-md title-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Titles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-6 col-md form-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Forms, {\n        getData: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        temp: this.state.temp,\n        city: this.state.city,\n        country: this.state.country,\n        humidity: this.state.humidity,\n        description: this.state.description,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), sites), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/juanzapien/Documents/api-project/src/App.js"],"names":["React","Component","Titles","Forms","Weather","Footer","axios","ApiWeatherKey","process","env","REACT_APP_WEATHER_API_KEY","ApiYelpKey","REACT_APP_YELP_API_KEY","App","state","temp","undefined","city","country","humidity","description","park","img","error","check","getYata","place","get","headers","Authorization","params","categories","title","alias","term","then","res","console","log","values","images","i","push","data","businesses","name","image_url","setState","catch","err","getData","e","preventDefault","target","elements","value","toLowerCase","split","join","fetch","ApiCall","json","cod","main","sys","weather","message","sites","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Titles from './components/Titles';\nimport Forms from './components/Forms';\nimport Weather from './components/Weather';\nimport Footer from './components/Footer';\nimport axios from 'axios';\n\nconst ApiWeatherKey = process.env.REACT_APP_WEATHER_API_KEY ;\nconst ApiYelpKey = process.env.REACT_APP_YELP_API_KEY;\n\n\nclass App extends Component {\n  state = {\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    park: undefined,\n    img: undefined,\n    error: undefined,\n    check: false\n  }\n\n  getYata = (place) => {\n\n      axios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search?location=${place}`, {\n        headers: {\n          Authorization: `Bearer ${ApiYelpKey}`\n      },\n        params: {\n        categories: 'active',\n        title: \"Parks\",\n        alias: \"parks\",\n        term: \"park\"\n      }\n      })\n      .then((res) => {\n        console.log(res);\n        let values  = [];\n        let images = [];\n\n        for(let i= 0; i< 4; i++ ){\n          values.push(res.data.businesses[i].name);\n          images.push(res.data.businesses[i].image_url);\n        }\n\n        this.setState({\n          temp: this.state.temp,\n          city: this.state.city,\n          country: this.state.country,\n          humidity: this.state.humidity,\n          description: this.state.description,\n          park: values,\n          img:images,\n          error: this.state.error,\n          check: true\n        });\n      })\n      .catch((err) => {\n      console.log ('error')\n      return 'error';\n      })\n    }\n\n\n  \n\n  getData = async (e) => {\n    e.preventDefault();\n\n    //let city = e.target.elements.city.value;\n\n    const city = (e.target.elements.city.value).toLowerCase().split(' ').join('+');\n    const country = e.target.elements.country.value;\n\n    //const cityUnderscore = city.split(' ').join('+');\n\n    \n    \n\n    console.log(city);\n    \n\n\n    const ApiCall = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&units=imperial&appid=${ApiWeatherKey}`);\n    const data = await ApiCall.json();\n    console.log(data);\n\n    \n    if(city && country && data.cod !== '404'){\n\n      this.setState({\n        temp: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        park: 'Loading',\n        img:'Loading',\n        error: \"\",\n        check: false\n      });\n    }else{\n      this.setState({\n        temp: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        park: undefined,\n        img:'Loading',\n        error: data.message,\n        check: false\n      });\n\n    }\n    this.getYata(city);\n  }\n\n\n  render() {  \n    const sites = [];\n    if(this.state.check){\n      for(let i = 0; i <this.state.park.length; i++){\n            sites.push(\n              <div className=\"row parks\">\n                <div className=\"col-6 col-md park-left\">\n                  <img src={this.state.img[i]} alt=\"Img\" className={\"cardImg\"}/>\n                </div>\n                <div className=\"col-6 col-md park-right\">\n                  <h4 className=\"park--title\"><b>{this.state.park[i]}</b></h4>\n                </div>\n             </div>)\n\n      }\n    }\n    return (\n    <div>\n      <div className=\"row headers\">\n          <div className=\"col-6 col-md title-left\">\n            <Titles/>  \n          </div>\n          <div className=\"col-6 col-md form-right\">\n          <Forms getData={this.getData}/>\n                <Weather \n                  temp={this.state.temp}\n                  city ={this.state.city}\n                  country = {this.state.country}\n                  humidity = {this.state.humidity}\n                  description = {this.state.description}\n                  error = {this.state.error}     \n                  />       \n          </div>\n          {sites}\n          \n      </div>\n      <Footer/>\n    </div>\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}